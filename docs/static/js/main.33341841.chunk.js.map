{"version":3,"sources":["components/AddCategory.jsx","helpers/getGif.js","components/GifGridItems.jsx","components/Spinner.jsx","components/GifGrid.jsx","hooks/useFetchGif.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","alert","categories","type","onChange","target","value","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","className","href","rel","src","alt","Spinner","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yNAwCeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAqB1C,OACC,sBAAMC,SAZc,SAACC,GACrBA,EAAEC,iBAIiB,KAAfJ,EAAmBK,MAAM,mBAE5BP,GAAc,SAACQ,GAAD,OAAiBN,GAAjB,mBAAgCM,QAK/C,SACC,uBACCC,KAAK,OACLC,SApBuB,SAACL,GAC1BF,EAAcE,EAAEM,OAAOC,QAoBrBC,YAAY,gBACZD,MAAOV,O,8BC7BEY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACP,mCACTC,EAFgB,iDAEgCC,UACrDH,GAHqB,6BACP,oCADO,SAOHI,MAAMF,GAPH,cAOhBG,EAPgB,gBAQCA,EAAKC,OARN,uBAQdC,EARc,EAQdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdd,kBAkBfM,GAlBe,4CAAH,sDCYLO,EAXM,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC9B,OACC,sBAAKc,UAAU,yCAAf,UACC,mBAAGC,KAAMf,EAAKN,OAAO,SAASsB,IAAI,aAAlC,SACC,qBAAKC,IAAKjB,EAAKkB,IAAKR,MAErB,4BAAIA,QCIQS,G,MATC,WACf,OACC,sBAAKL,UAAU,aAAf,UACC,wBACA,6BCoBYM,EArBC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECHP,SAACA,GAAc,IAAD,EACdd,mBAAS,CAClCqB,KAAM,GACNgB,SAAS,IAH8B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACT3B,EAAQC,GAAU2B,MAAK,SAACC,GAAD,OACtBH,EAAS,CACRlB,KAAMqB,EACNL,SAAS,SAGT,CAACvB,IACGwB,EDVyBK,CAAY7B,GAA9B4B,EADmB,EACzBrB,KAAYgB,EADa,EACbA,QAEpB,OACC,qCACC,6BAAKvB,IACJuB,GAAW,cAAC,EAAD,IAEZ,qBAAKP,UAAU,YAAf,SACEY,EAAKnB,KAAI,SAACC,GAAD,OACT,wBAAC,EAAD,2BAAkBA,GAAlB,IAAuBoB,IAAKpB,EAAIC,eEQtBoB,EApBM,WAAM,MAEU7C,mBAAS,IAFnB,mBAEnBO,EAFmB,KAEPR,EAFO,KAI1B,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE3BQ,EAAWgB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,MAGf,iCACC,sE,MCbJgC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.33341841.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\t// Estado del input\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\r\n\t//\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\t//\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// Actualiza el inputValue\r\n\r\n\t\t// Verifica que inputValue no esté vacío\r\n\t\tif (inputValue === \"\") alert(\"Campo Requerido\");\r\n\t\telse {\r\n\t\t\tsetCategories((categories) => [inputValue, ...categories]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\tplaceholder=\"Busca Algo...\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","//\r\nexport const getGifs = async (category) => {\r\n\tconst apiKey = \"0aMxIZgDQGHTIeXJuo4yMGFg3KAjQQsf\";\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory\r\n\t)}&limit=10&api_key=${apiKey}`;\r\n\r\n\t//\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItems = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\t<img src={url} alt={title} />\r\n\t\t\t</a>\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItems;\r\n","import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className=\"lds-ripple\">\r\n\t\t\t<div />\r\n\t\t\t<div />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\nimport GifGridItems from \"./GifGridItems\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data: imgs, loading } = useFetchGif(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && <Spinner />}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{imgs.map((img) => (\r\n\t\t\t\t\t<GifGridItems {...img} key={img.id} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nGifGrid.propTypes = {\r\n\tcategory: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGif = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) =>\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t})\r\n\t\t);\r\n\t}, [category]);\r\n\treturn state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\t//\r\n\tconst [categories, setCategories] = useState([]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>GifExpertApp</h1>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t{categories.map((category) => (\r\n\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t))}\r\n\r\n\t\t\t<footer>\r\n\t\t\t\t<p>&copy; Engel David Reyes Sandoval</p>\r\n\t\t\t</footer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}